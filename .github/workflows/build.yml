name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - released
  workflow_dispatch: {}

env:
  NODE_BUILD_CMD: npx --no-install prebuild -r node -t 16.0.0 --include-regex 'better_sqlite3.node$'
  ELECTRON_BUILD_CMD: npx --no-install prebuild -r electron -t 16.0.0 --include-regex 'better_sqlite3.node$'

jobs:
  test:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        node:
          - 16
    name: Testing Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - if: ${{ startsWith(matrix.os, 'windows') }}
        run: pip.exe install setuptools
      - if: ${{ ! startsWith(matrix.os, 'windows') }}
        run: python3 -m pip install setuptools
      - run: npm install --ignore-scripts
      - run: npm run build-debug
      - run: npm test

  publish:
    if: ${{ github.event_name == 'release' }}
    name: Publishing to NPM
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      #     registry-url: https://registry.npmjs.org
      # - run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  prebuild:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
    name: Prebuild on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: publish
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16

  prebuild-linux-arm:
    strategy:
      matrix:
        arch:
          - arm64
    name: Prebuild on Linux (${{ matrix.arch }})
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v1
      - run: |
          docker run --rm -v $(pwd):/tmp/project --entrypoint /bin/sh --platform linux/${{ matrix.arch }} node:16 -c "\
          cd /tmp/project && \
          npm install --ignore-scripts && \
          ${{ env.NODE_BUILD_CMD }} -u ${{ secrets.ACCESS_TOKEN }}"
